from typing import Any

"""
_eve
"""

    def flush(self, ) -> Any: ...
    def cc(self, b: bytes) -> Any: ...
    def AlphaFunc(self, func: int, ref: int) -> Any: ...
    def Begin(self, prim: int) -> Any: ...
    def BitmapExtFormat(self, format: int) -> Any: ...
    def BitmapHandle(self, handle: int) -> Any: ...
    def BitmapLayoutH(self, linestride: int, height: int) -> Any: ...
    def BitmapLayout(self, format: int, linestride: int, height: int) -> Any: ...
    def BitmapSizeH(self, width: int, height: int) -> Any: ...
    def BitmapSize(self, filter: int, wrapx: int, wrapy: int, width: int, height: int) -> Any: ...
    def BitmapSource(self, addr: int) -> Any: ...
    def BitmapSwizzle(self, r: int, g: int, b: int, a: int) -> Any: ...
    def BitmapTransformA(self, p: Any, v: int) -> Any: ...
    def BitmapTransformB(self, p: Any, v: int) -> Any: ...
    def BitmapTransformC(self, v: int) -> Any: ...
    def BitmapTransformD(self, p: Any, v: int) -> Any: ...
    def BitmapTransformE(self, p: Any, v: int) -> Any: ...
    def BitmapTransformF(self, v: int) -> Any: ...
    def BlendFunc(self, src: int, dst: int) -> Any: ...
    def Call(self, dest: int) -> Any: ...
    def Cell(self, cell: int) -> Any: ...
    def ClearColorA(self, alpha: int) -> Any: ...
    def ClearColorRGB(self, red: int, green: int, blue: int) -> Any: ...
    def Clear(self, c: int, s: int, t: int) -> Any: ...
    def ClearStencil(self, s: int) -> Any: ...
    def ClearTag(self, s: int) -> Any: ...
    def ColorA(self, alpha: int) -> Any: ...
    def ColorMask(self, r: int, g: int, b: int, a: int) -> Any: ...
    def ColorRGB(self, red: int, green: int, blue: int) -> Any: ...
    def Display(self, ) -> Any: ...
    def End(self, ) -> Any: ...
    def Jump(self, dest: int) -> Any: ...
    def LineWidth(self, width: int) -> Any: ...
    def Macro(self, m: int) -> Any: ...
    def Nop(self, ) -> Any: ...
    def PaletteSource(self, addr: int) -> Any: ...
    def PointSize(self, size: int) -> Any: ...
    def RestoreContext(self, ) -> Any: ...
    def Return(self, ) -> Any: ...
    def SaveContext(self, ) -> Any: ...
    def ScissorSize(self, width: int, height: int) -> Any: ...
    def ScissorXY(self, x: int, y: int) -> Any: ...
    def StencilFunc(self, func: int, ref: int, mask: int) -> Any: ...
    def StencilMask(self, mask: int) -> Any: ...
    def StencilOp(self, sfail: int, spass: int) -> Any: ...
    def TagMask(self, mask: int) -> Any: ...
    def Tag(self, s: int) -> Any: ...
    def VertexTranslateX(self, x: int) -> Any: ...
    def VertexTranslateY(self, y: int) -> Any: ...
    def VertexFormat(self, frac: int) -> Any: ...
    def Vertex2ii(self, x: int, y: int, handle: int, cell: int) -> Any: ...
    def Vertex2f(self, b: Any) -> Any: ...
    def cmd0(self, n: int) -> Any: ...
    def cmd(self, n: int, fmt: str, args: tuple) -> Any: ...
